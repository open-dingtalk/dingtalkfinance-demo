{"version":3,"sources":["components/Work.js","components/Create.js","components/Pay.js","components/Return.js","App.js","reportWebVitals.js","index.js"],"names":["Work","props","Form","useForm","form","className","onFinish","data","onClick","Item","label","name","placeholder","htmlType","type","Create","useState","pickerV","setPickerV","time","settime","now","Date","title","rules","required","message","visible","onClose","min","precision","onConfirm","val","s","setFieldsValue","applyTime","moment","format","value","Pay","gmtTradeCreate","gmtTradeFinish","Return","gmtRefund","App","state","domain","corpId","userId","userName","payCode","showType","codeId","monthLater","add","requestId","this","login","saveDingTalkFinance","setState","authDingTalkCode","e","asyncDingTalkReturnResult","asyncDingTalkPayResult","createDingTalkFinance","updateDingTalkFinance","getDingTalkCode","codeIdentity","status","extInfo","xx_key","axios","post","JSON","stringify","headers","then","res","success","catch","error","alert","userData","applicantName","visitorName","visitorMobile","userCorpRelationType","userIdentity","gmtExpired","availableTimes","gmtStart","gmtEnd","corpAddress","visitorCorpInfo","visitorExtInfo","remarks","corpWebsite","body","alipayCode","verifyLocation","verifyResult","verifyTime","payData","merchantName","amount","chargeAmount","payChannelDetailList","fundToolDetailList","fundToolName","gmtCreate","gmtFinish","promotionFundTool","payChannelName","payChannelOrderNo","payChannelType","promotionAmount","remark","tradeNo","randomString","tradeStatus","returnData","refundAmount","refundOrderNo","refundPromotionAmount","payChannelRefundOrderNo","len","chars","maxPos","length","pwd","i","charAt","Math","floor","random","get","loginAction","_this","dd","permission","requestAuthCode","onSuccess","authCode","code","onFail","err","React","Component","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","path","component","document","getElementById"],"mappings":"6UA0BeA,EAvBF,SAACC,GACZ,MAAeC,IAAKC,UAAbC,EAAP,oBAMA,OACE,gCACE,oBAAIC,UAAU,QAAd,gCACA,eAAC,IAAD,CAAMD,KAAMA,EAAME,SAPL,SAACC,GAChBN,EAAMO,QAAQD,IAMZ,UACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,iCAAQC,KAAK,UAA9B,SACE,cAAC,IAAD,CAAOC,YAAY,uJAGrB,cAAC,IAAD,CAAQC,SAAS,SAASC,KAAK,UAA/B,iC,yBCkDOC,EA/DA,SAACd,GACd,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAA8BY,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAKMC,EAAM,IAAIC,KAChB,OACE,gCACE,qBAAIjB,UAAU,QAAd,2CAA4BJ,EAAMsB,SAClC,eAAC,IAAD,CAAMnB,KAAMA,EAAME,SAPL,SAACC,GAChBN,EAAMO,QAAQD,IAMZ,UACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,iCAAQC,KAAK,gBAA9B,SACE,cAAC,IAAD,CAAOC,YAAY,uDAErB,eAAC,IAAKH,KAAN,CACIC,MAAM,2BACNC,KAAK,YACLa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAHvC,UAKE,qBAAKrB,UAAU,QAAf,SACE,cAAC,IAAD,CAAQS,KAAK,UAAUN,QAAS,kBAAMU,GAAW,IAAjD,SACGC,EAAO,6CAAY,2CAIxB,cAAC,IAAD,CACIQ,QAASV,EACTW,QAAS,WACPV,GAAW,IAEbW,IAAK,IAAIP,KACTQ,UAAU,SACVC,UAAW,SAACC,EAAKC,GACfb,EAAQY,GACR5B,EAAK8B,eAAe,CAClBC,UAAWC,IAAOJ,GAAKK,OAAO,0BAVtC,SAcG,SAACC,GACA,OAAOA,EACDF,IAAOE,GAAOD,OAAO,uBACrBD,IAAOf,GAAKgB,OAAO,6BAI/B,cAAC,IAAK5B,KAAN,CAAWC,MAAM,2BAAOC,KAAK,cAA7B,SACE,cAAC,IAAD,CAAOC,YAAY,iDAErB,cAAC,IAAKH,KAAN,CAAWC,MAAM,iCAAQC,KAAK,gBAA9B,SACE,cAAC,IAAD,CAAOC,YAAY,uDAGrB,cAAC,IAAD,CAAQC,SAAS,SAASC,KAAK,UAA/B,iCCyCOyB,EAhGH,SAACtC,GACT,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAA8BY,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAKMC,EAAM,IAAIC,KAChB,OACI,gCACI,qBAAIjB,UAAU,QAAd,2CAA4BJ,EAAMsB,SAClC,eAAC,IAAD,CAAMnB,KAAMA,EAAME,SAPT,SAACC,GACdN,EAAMO,QAAQD,IAMV,UACI,cAAC,IAAKE,KAAN,CAAWC,MAAM,2BAAOC,KAAK,eAA7B,SACI,cAAC,IAAD,CAAOC,YAAY,iDAEvB,cAAC,IAAKH,KAAN,CAAWC,MAAM,2BAAOC,KAAK,QAA7B,SACI,cAAC,IAAD,CAAOC,YAAY,iDAEvB,cAAC,IAAKH,KAAN,CAAWC,MAAM,2BAAOC,KAAK,SAA7B,SACI,cAAC,IAAD,CAAOC,YAAY,iDAEvB,eAAC,IAAKH,KAAN,CACIC,MAAM,uCACNC,KAAK,iBAFT,UAKI,qBAAKN,UAAU,QAAf,SACI,cAAC,IAAD,CAAQS,KAAK,UAAUN,QAAS,kBAAMU,GAAW,IAAjD,SACKC,EAAO,yDAAc,uDAI9B,cAAC,IAAD,CACIQ,QAASV,EACTW,QAAS,WACLV,GAAW,IAEfW,IAAK,IAAIP,KACTQ,UAAU,SACVC,UAAW,SAACC,EAAKC,GACbb,EAAQY,GACR5B,EAAK8B,eAAe,CAChBM,eAAgBJ,IAAOJ,GAAKK,OAAO,0BAV/C,SAcK,SAACC,GACE,OAAOA,EACDF,IAAOE,GAAOD,OAAO,uBACrBD,IAAOf,GAAKgB,OAAO,6BAIrC,eAAC,IAAK5B,KAAN,CACIC,MAAM,uCACNC,KAAK,iBACLa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qDAHvC,UAKI,qBAAKrB,UAAU,QAAf,SACI,cAAC,IAAD,CAAQS,KAAK,UAAUN,QAAS,kBAAMU,GAAW,IAAjD,SACKC,EAAO,yDAAc,uDAI9B,cAAC,IAAD,CACIQ,QAASV,EACTW,QAAS,WACLV,GAAW,IAEfW,IAAK,IAAIP,KACTQ,UAAU,SACVC,UAAW,SAACC,EAAKC,GACbb,EAAQY,GACR5B,EAAK8B,eAAe,CAChBO,eAAgBL,IAAOJ,GAAKK,OAAO,0BAV/C,SAcK,SAACC,GACE,OAAOA,EACDF,IAAOE,GAAOD,OAAO,uBACrBD,IAAOf,GAAKgB,OAAO,6BAMrC,cAAC,IAAD,CAAQxB,SAAS,SAASC,KAAK,UAA/B,iCC/BD4B,EAzDA,SAACzC,GACZ,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAA8BY,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAKMC,EAAM,IAAIC,KAChB,OACI,gCACI,qBAAIjB,UAAU,QAAd,2CAA4BJ,EAAMsB,SAClC,eAAC,IAAD,CAAMnB,KAAMA,EAAME,SAPT,SAACC,GACdN,EAAMO,QAAQD,IAMV,UACI,cAAC,IAAKE,KAAN,CAAWC,MAAM,2BAAOC,KAAK,eAA7B,SACI,cAAC,IAAD,CAAOC,YAAY,iDAEvB,eAAC,IAAKH,KAAN,CACIC,MAAM,2BACNC,KAAK,YACLa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAHvC,UAKI,qBAAKrB,UAAU,QAAf,SACI,cAAC,IAAD,CAAQS,KAAK,UAAUN,QAAS,kBAAMU,GAAW,IAAjD,SACKC,EAAO,6CAAY,2CAI5B,cAAC,IAAD,CACIQ,QAASV,EACTW,QAAS,WACLV,GAAW,IAEfW,IAAK,IAAIP,KACTQ,UAAU,SACVC,UAAW,SAACC,EAAKC,GACbb,EAAQY,GACR5B,EAAK8B,eAAe,CAChBS,UAAWP,IAAOJ,GAAKK,OAAO,0BAV1C,SAcK,SAACC,GACE,OAAOA,EACDF,IAAOE,GAAOD,OAAO,uBACrBD,IAAOf,GAAKgB,OAAO,6BAKrC,cAAC,IAAD,CAAQxB,SAAS,SAASC,KAAK,UAA/B,iCCzCV8B,G,yDACJ,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,CAIXC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTC,SAAU,EACVC,OAAQ,GACR/B,IAAKe,IAAO,IAAId,MAAQe,OAAO,uBAC/BgB,WAAYjB,MAASkB,IAAI,GAAG,QAAQjB,OAAO,uBAC3CkB,UAAW,QAfI,E,0CAmBnB,WAAU,IAAD,OAIP,MAH0B,KAAtBC,KAAKX,MAAMG,QACbQ,KAAKC,QAGL,sBAAKpD,UAAU,MAAf,UAC2B,IAAxBmD,KAAKX,MAAMM,UACV,gCACE,4BACE,cAAC,IAAD,CAAQrC,KAAK,UAAUN,QAAS,kBAAM,EAAKkD,uBAA3C,0DAIF,4BAAG,cAAC,IAAD,CAAQ5C,KAAK,UAAUN,QAAS,kBAAM,EAAKmD,SAAS,CAAER,SAAU,KAAhE,4EAGH,4BAAG,cAAC,IAAD,CAAQrC,KAAK,UAAUN,QAAS,kBAAM,EAAKmD,SAAS,CAAER,SAAU,KAAhE,4EAGH,4BAAG,cAAC,IAAD,CACDrC,KAAK,UACLN,QAAS,kBAAM,EAAKmD,SAAS,CAAER,SAAU,KAFxC,gEAMH,4BAAG,cAAC,IAAD,CAAQrC,KAAK,UAAUN,QAAS,kBAAM,EAAKoD,oBAA3C,wFAGH,4BAAG,cAAC,IAAD,CACD9C,KAAK,UACLN,QAAS,kBAAM,EAAKmD,SAAS,CAAER,SAAU,KAFxC,sEAMH,4BAAG,cAAC,IAAD,CACDrC,KAAK,UACLN,QAAS,kBAAM,EAAKmD,SAAS,CAAER,SAAU,KAFxC,yEAUkB,IAAxBK,KAAKX,MAAMM,UACR,cAAC,EAAD,CACI5B,MAAO,2BACPf,QAAS,SAACqD,GAAD,OAAO,EAAKC,0BAA0BD,MAI9B,IAAxBL,KAAKX,MAAMM,UACR,cAAC,EAAD,CACI5B,MAAO,2BACPf,QAAS,SAACqD,GAAD,OAAO,EAAKE,uBAAuBF,MAI3B,IAAxBL,KAAKX,MAAMM,UACR,cAAC,EAAD,CACI5B,MAAO,iCACPf,QAAS,SAACqD,GAAD,OAAO,EAAKG,sBAAsBH,MAI1B,IAAxBL,KAAKX,MAAMM,UACR,cAAC,EAAD,CACI5B,MAAO,iCACPf,QAAS,SAACqD,GAAD,OAAO,EAAKI,sBAAsBJ,MAI1B,IAAxBL,KAAKX,MAAMM,UACV,cAAC,EAAD,CACE3C,QAAS,SAACD,GACR,EAAKoD,SAAS,CACZT,QAAS3C,EAAK2C,QACdC,SAAU,IAEZ,EAAKe,gBAAgB3D,EAAK2C,iB,iCAQtC,WACE,IAAI3C,EAAO,CACT4D,aAAc,aACdC,OAAQ,OACRrB,OAAQS,KAAKX,MAAME,OACnBsB,QAAS,CACPC,OAAQ,aAGZC,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,QAAS2B,KAAKC,UAAUnE,GAAO,CACvDoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,SACXpD,IAAQoD,QAAQ,6DAGnBC,OAAM,SAACC,GACNC,MAAM,2BAA6BR,KAAKC,UAAUM,S,mCAKxD,SAAsBE,GAAW,IAAD,OACtB/C,EAAsD+C,EAAtD/C,UAAUgD,EAA4CD,EAA5CC,cAAcC,EAA8BF,EAA9BE,YAAYC,EAAkBH,EAAlBG,cACxC9E,EAAO,CACTgD,UAAWC,KAAKX,MAAMU,UACtBY,aAAc,aACdC,OAAQ,OACRrB,OAAQS,KAAKX,MAAME,OACnBuC,qBAAsB,iBACtBC,aAAc/B,KAAKX,MAAMG,OACzBwC,WAAYhC,KAAKX,MAAMQ,WACvBoC,eAAgB,CACd,CACEC,SAAUlC,KAAKX,MAAMxB,IACrBsE,OAAQnC,KAAKX,MAAMQ,aAGvBgB,QAAS,CACPuB,YAAa,2CACbT,cAAeA,EACfhD,UAAWA,EACXiD,YAAaA,EACbC,cAAeA,EACfQ,gBAAiB,2BACjBC,eAAgB,kCAChBC,QAAS,2BACTC,YAAa,qBAGjBzB,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,kBAAmB2B,KAAKC,UAAUnE,GAAO,CACjEoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,UACXpD,IAAQoD,QAAQ,iIAChB,EAAKnB,SAAS,CACZP,OAAQyB,EAAItE,KAAKA,KACjB4C,SAAU,QAIf4B,OAAM,SAACC,GACNC,MAAM,6BAA+BR,KAAKC,UAAUM,S,mCAI1D,SAAsBE,GAAW,IAAD,OAItB/C,EAAsD+C,EAAtD/C,UAAUgD,EAA4CD,EAA5CC,cAAcC,EAA8BF,EAA9BE,YAAYC,EAAkBH,EAAlBG,cACxC9E,EAAO,CACT6C,OAAQI,KAAKX,MAAMO,OACnBe,aAAc,aACdC,OAAQ,OACRrB,OAAQS,KAAKX,MAAME,OACnBuC,qBAAsB,iBACtBC,aAAc/B,KAAKX,MAAMG,OACzBwC,WAAYhC,KAAKX,MAAMQ,WACvBoC,eAAgB,CACd,CACEC,SAAUlC,KAAKX,MAAMxB,IACrBsE,OAAQnC,KAAKX,MAAMQ,aAGvBgB,QAAS,CACPuB,YAAa,2CACbT,cAAeA,EACfhD,UAAWA,EACXiD,YAAaA,EACbC,cAAeA,EACfQ,gBAAiB,iCACjBC,eAAgB,kCAChBC,QAAS,2BACTC,YAAa,qBAGjBzB,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,kBAAmB2B,KAAKC,UAAUnE,GAAO,CACjEoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,UACX,EAAKnB,SAAS,CACZR,SAAU,IAEZzB,IAAQoD,QAAQ,qIAGnBC,OAAM,SAACC,GACNC,MAAM,6BAA+BR,KAAKC,UAAUM,S,6BAI1D,SAAgB9B,GACd,IAAM3C,EAAO,CACX2C,QAASA,EACTK,UAAWC,KAAKX,MAAMU,WAExBgB,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,UAAW2B,KAAKC,UAAUnE,GAAO,CACzDoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,SACXpD,IAAQoD,QAAQ,6FAAoBD,EAAItE,KAAKA,KAAK0F,KAAKC,eAG1DnB,OAAM,SAACC,GACNC,MAAM,uBAAyBR,KAAKC,UAAUM,S,8BAIpD,WACE,IAAMzE,EAAO,CACXwC,OAAQS,KAAKX,MAAME,OACnBG,QAASM,KAAKX,MAAMK,QACpBoC,qBAAsB,iBACtBC,aAAc/B,KAAKX,MAAMG,OACzBmD,eAAgB,mBAChBC,cAAc,EACdC,WAAY7C,KAAKX,MAAMxB,KAEzBkD,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,UAAW2B,KAAKC,UAAUnE,GAAO,CACzDoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,QACXpD,IAAQoD,QAAQ,0DAEhBpD,IAAQsD,MAAM,6DAGjBD,OAAM,SAACC,GACNC,MAAM,wBAA0BR,KAAKC,UAAUM,S,oCAIrD,SAAuBsB,GAAU,IAAD,OACtBC,EAA4DD,EAA5DC,aAAahF,EAA+C+E,EAA/C/E,MAAMiF,EAAyCF,EAAzCE,OAAsB/D,GAAmB6D,EAAlC9D,eAAkC8D,EAAnB7D,gBAC3ClC,EAAO,CACXiG,OAAQA,EACRC,aAAc,IACd1D,OAAQS,KAAKX,MAAME,OACnBP,eAAgBC,EAChBA,eAAgBA,EAChB8D,aAAcA,EACdG,qBAAsB,CACpB,CACEF,OAAQ,OACRG,mBAAoB,CAClB,CACEH,OAAQ,OACRnC,QAAS,GACTuC,aAAc,uCACdC,UAAWrD,KAAKX,MAAMxB,IACtByF,UAAWtD,KAAKX,MAAMxB,IACtB0F,mBAAmB,IAGvBC,eAAgB,uCAChBC,kBAAmB,oBACnBC,eAAgB,UAChBC,gBAAiB,SAGrBjE,QAASM,KAAKX,MAAMK,QACpBiE,gBAAiB,IACjBC,OAAQ,iCACR7F,MAAOA,EACP8F,QAAS7D,KAAK8D,eACdC,YAAa,UACbvE,OAAQQ,KAAKX,MAAMG,QAErBuB,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,UAAW2B,KAAKC,UAAUnE,GAAO,CACzDoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,UACXpD,IAAQoD,QAAQ,oDAChB,EAAKnB,SAAS,CACZR,SAAU,QAIf4B,OAAM,SAACC,GACNC,MAAM,8BAAgCR,KAAKC,UAAUM,S,uCAI3D,SAA0BwC,GAAa,IAAD,OAC5BC,EAA0BD,EAA1BC,aAAa9E,EAAa6E,EAAb7E,UACfpC,EAAO,CACXwC,OAAQS,KAAKX,MAAME,OACnBC,OAAQQ,KAAKX,MAAMG,OACnBqE,QAAS7D,KAAK8D,eACdI,cAAelE,KAAK8D,eACpBF,OAAQ,2BACRK,aAAcA,EACdE,sBAAuB,OACvBhF,UAAWA,EACXO,QAASM,KAAKX,MAAMK,QACpBwD,qBAAsB,CACpB,CACEF,OAAQ,OACRG,mBAAoB,CAClB,CACEH,OAAQ,OACRnC,QAAS,GACTuC,aAAc,uCACdC,UAAWrD,KAAKX,MAAMxB,IACtByF,UAAWtD,KAAKX,MAAMxB,IACtB0F,mBAAmB,IAGvBC,eAAgB,uCAChBC,kBAAmB,oBACnBW,wBAAyB,oBACzBV,eAAgB,UAChBC,gBAAiB,UAIvB5C,IACGC,KAAKhB,KAAKX,MAAMC,OAAS,UAAW2B,KAAKC,UAAUnE,GAAO,CACzDoE,QAAS,CAAE,eAAgB,sBAE5BC,MAAK,SAACC,GACDA,EAAItE,KAAKuE,UACXpD,IAAQoD,QAAQ,oDAChB,EAAKnB,SAAS,CACZR,SAAU,QAIf4B,OAAM,SAACC,GACNC,MAAM,iCAAmCR,KAAKC,UAAUM,S,0BAI9D,SAAa6C,GACXA,EAAMA,GAAO,GAIb,IAHA,IAAIC,EAAQ,mDACRC,EAASD,EAAME,OACfC,EAAM,GACDC,EAAI,EAAGA,EAAIL,EAAKK,IACvBD,GAAOH,EAAMK,OAAOC,KAAKC,MAAMD,KAAKE,SAAWP,IAEjD,OAAOE,I,mBAGT,WAAS,IAAD,OACN1D,IACGgE,IAAI/E,KAAKX,MAAMC,OAAS,cACxB8B,MAAK,SAACC,GACDA,EAAItE,MACN,EAAKiI,YAAY3D,EAAItE,SAGxBwE,OAAM,SAACC,GACNC,MAAM,eAAiBR,KAAKC,UAAUM,S,yBAG5C,SAAYjC,GACV,IAAI0F,EAAQjF,KACZkF,UAAWC,WAAWC,gBAAgB,CACpC7F,OAAQA,EACR8F,UAAW,SAAUhE,GAEnB4D,EAAM5F,MAAMiG,SAAWjE,EAAIkE,KAC3BxE,IACGgE,IAAIE,EAAM5F,MAAMC,OAAS,mBAAqB2F,EAAM5F,MAAMiG,UAC1DlE,MAAK,SAACC,GACL,GAAIA,GAAOA,EAAItE,KAAKuE,QAAS,CAC3B,IAAI9B,EAAS6B,EAAItE,KAAKA,KAAKyC,OACvBC,EAAW4B,EAAItE,KAAKA,KAAK0C,SAC7BvB,IAAQoD,QAAQ,8CAAa7B,GAC3BwF,EAAM9E,SAAS,CACbX,OAAQA,EACRC,SAAUA,EACVF,OAAQA,SAGZkC,MAAM,uBAAsBR,KAAKC,UAAUG,OAG9CE,OAAM,SAACC,GACNC,MAAM,6BAA4BR,KAAKC,UAAUM,QAGvDgE,OAAQ,SAAUC,GAEhBhE,MAAM,iCAAgCR,KAAKC,UAAUuE,W,GAza3CC,IAAMC,YA+aTC,cAAWxG,GChbXyG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCAdO,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACE,cAAC,IAAD,CAAOC,KAAI,IAAOC,UAAWrH,MAE/BsH,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.400cc798.chunk.js","sourcesContent":["import react, { useEffect } from \"react\"\nimport { Form, Input, Button } from \"antd\"\n\nconst Work = (props) => {\n  const [form] = Form.useForm()\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n\n  return (\n    <div>\n      <h4 className=\"title\">钉工牌</h4>\n      <Form form={form} onFinish={onSubmit}>\n        <Form.Item label=\"支付电子码\" name=\"payCode\">\n          <Input placeholder=\"请输入钉工牌电子码，该码值请扫描钉工牌电子码获取\" />\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Work\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst Create = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [time, settime] = useState(null)\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n  const now = new Date()\n  return (\n    <div>\n      <h4 className=\"title\">钉工牌——{props.title}</h4>\n      <Form form={form} onFinish={onSubmit}>\n        <Form.Item label=\"申请人名称\" name=\"applicantName\">\n          <Input placeholder=\"请输入申请人名称\" />\n        </Form.Item>\n        <Form.Item\n            label=\"申请时间\"\n            name=\"applyTime\"\n            rules={[{ required: true, message: \"申请时间必选\" }]}\n        >\n          <div className=\"table\">\n            <Button type=\"primary\" onClick={() => setPickerV(true)}>\n              {time ? \"已选择申请时间\" : \"选择申请时间\"}\n            </Button>\n          </div>\n\n          <DatePicker\n              visible={pickerV}\n              onClose={() => {\n                setPickerV(false)\n              }}\n              min={new Date()}\n              precision=\"second\"\n              onConfirm={(val, s) => {\n                settime(val)\n                form.setFieldsValue({\n                  applyTime: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),\n                })\n              }}\n          >\n            {(value) => {\n              return value\n                  ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                  : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n            }}\n          </DatePicker>\n        </Form.Item>\n        <Form.Item label=\"访客名称\" name=\"visitorName\">\n          <Input placeholder=\"请输入访客名称\" />\n        </Form.Item>\n        <Form.Item label=\"访客手机号\" name=\"visitorMobile\">\n          <Input placeholder=\"请输入访客手机号\" />\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Create\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst Pay = (props) => {\n    const [form] = Form.useForm()\n    const [pickerV, setPickerV] = useState(false)\n    const [time, settime] = useState(null)\n\n    const onSubmit = (data) => {\n        props.onClick(data)\n    }\n    const now = new Date()\n    return (\n        <div>\n            <h4 className=\"title\">钉工牌——{props.title}</h4>\n            <Form form={form} onFinish={onSubmit}>\n                <Form.Item label=\"商户名称\" name=\"merchantName\">\n                    <Input placeholder=\"请输入商户名称\" />\n                </Form.Item>\n                <Form.Item label=\"订单标题\" name=\"title\">\n                    <Input placeholder=\"请输入订单标题\" />\n                </Form.Item>\n                <Form.Item label=\"订单金额\" name=\"amount\">\n                    <Input placeholder=\"请输入订单金额\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"交易开始时间\"\n                    name=\"gmtTradeCreate\"\n                    // rules={[{ required: true, message: \"交易开始时间必选\" }]}\n                >\n                    <div className=\"table\">\n                        <Button type=\"primary\" onClick={() => setPickerV(true)}>\n                            {time ? \"已选择交易开始时间\" : \"选择交易开始时间\"}\n                        </Button>\n                    </div>\n\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                gmtTradeCreate: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n                <Form.Item\n                    label=\"交易结束时间\"\n                    name=\"gmtTradeFinish\"\n                    rules={[{ required: true, message: \"交易结束时间必选\" }]}\n                >\n                    <div className=\"table\">\n                        <Button type=\"primary\" onClick={() => setPickerV(true)}>\n                            {time ? \"已选择交易结束时间\" : \"选择交易结束时间\"}\n                        </Button>\n                    </div>\n\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                gmtTradeFinish: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n\n\n                <Button htmlType=\"submit\" type=\"primary\">\n                    提交\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Pay\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst Return = (props) => {\n    const [form] = Form.useForm()\n    const [pickerV, setPickerV] = useState(false)\n    const [time, settime] = useState(null)\n\n    const onSubmit = (data) => {\n        props.onClick(data)\n    }\n    const now = new Date()\n    return (\n        <div>\n            <h4 className=\"title\">钉工牌——{props.title}</h4>\n            <Form form={form} onFinish={onSubmit}>\n                <Form.Item label=\"退款金额\" name=\"refundAmount\">\n                    <Input placeholder=\"请输入退款金额\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"退款时间\"\n                    name=\"gmtRefund\"\n                    rules={[{ required: true, message: \"退款时间必选\" }]}\n                >\n                    <div className=\"table\">\n                        <Button type=\"primary\" onClick={() => setPickerV(true)}>\n                            {time ? \"已选择退款时间\" : \"选择退款时间\"}\n                        </Button>\n                    </div>\n\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                gmtRefund: moment(val).format(\"YYYY-MM-DD HH:mm:ss\"),\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n\n                <Button htmlType=\"submit\" type=\"primary\">\n                    提交\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Return\n","import * as dd from \"dingtalk-jsapi\"\nimport axios from \"axios\"\nimport React from \"react\"\nimport \"./App.css\"\nimport { message, Button } from \"antd\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport Work from \"./components/Work\"\nimport Create from \"./components/Create\"\nimport Pay from \"./components/Pay\"\nimport Return from \"./components/Return\"\nimport moment from 'moment'\nimport \"antd/dist/antd.min.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      //内网穿透工具介绍:\n      // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n      // 替换成后端服务域名\n      domain: \"\",\n      corpId: \"\",\n      userId: \"\",\n      userName: \"\",\n      payCode: \"\",\n      showType: 0,\n      codeId: \"\",\n      now: moment(new Date()).format('YYYY-MM-DD HH:mm:ss'),\n      monthLater: moment().add(30,'days').format(\"YYYY-MM-DD HH:mm:ss\"),\n      requestId: 123456\n    }\n  }\n\n  render() {\n    if (this.state.userId === \"\") {\n      this.login()\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showType === 0 && (\n          <div>\n            <p>\n              <Button type=\"primary\" onClick={() => this.saveDingTalkFinance()}>\n              企业配置钉工牌\n            </Button>\n            </p>\n            <p><Button type=\"primary\" onClick={() => this.setState({ showType: 2 })}>\n              创建个人钉工牌电子码\n            </Button></p>\n            <p><Button type=\"primary\" onClick={() => this.setState({ showType: 3 })}>\n              更新个人钉工牌电子码\n            </Button></p>\n            <p><Button\n              type=\"primary\"\n              onClick={() => this.setState({ showType: 1 })}\n            >\n              钉工牌电子码解码\n            </Button></p>\n            <p><Button type=\"primary\" onClick={() => this.authDingTalkCode()}>\n              钉工牌同步电子码验证结果\n            </Button></p>\n            <p><Button\n              type=\"primary\"\n              onClick={() => this.setState({ showType: 4 })}\n            >\n              钉工牌同步支付结果\n            </Button></p>\n            <p><Button\n              type=\"primary\"\n              onClick={() => this.setState({ showType: 5 })}\n            >\n              钉工牌同步退款结果\n            </Button></p>\n            \n          </div>\n        )}\n        {/* 同步退款结果 */}\n        {this.state.showType === 5 && (\n            <Return\n                title={\"同步退款\"}\n                onClick={(e) => this.asyncDingTalkReturnResult(e)}\n            />\n        )}\n        {/* 同步支付结果 */}\n        {this.state.showType === 4 && (\n            <Pay\n                title={\"同步支付\"}\n                onClick={(e) => this.asyncDingTalkPayResult(e)}\n            />\n        )}\n        {/* 创建电子码 */}\n        {this.state.showType === 2 && (\n            <Create\n                title={\"创建电子码\"}\n                onClick={(e) => this.createDingTalkFinance(e)}\n            />\n        )}\n        {/* 更新电子码 */}\n        {this.state.showType === 3 && (\n            <Create\n                title={\"更新电子码\"}\n                onClick={(e) => this.updateDingTalkFinance(e)}\n            />\n        )}\n        {/* 电子码解码 */}\n        {this.state.showType === 1 && (\n          <Work\n            onClick={(data) => {\n              this.setState({\n                payCode: data.payCode,\n                showType: 0,\n              })\n              this.getDingTalkCode(data.payCode)\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n  // 企业配置钉工牌\n  saveDingTalkFinance() {\n    let data = {\n      codeIdentity: \"DT_VISITOR\",\n      status: \"OPEN\",\n      corpId: this.state.corpId,\n      extInfo: {\n        xx_key: \"xx_value\",\n      },\n    }\n    axios\n      .post(this.state.domain + \"/save\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"企业配置钉工牌成功\")\n        }\n      })\n      .catch((error) => {\n        alert(\"saveDingTalkFinance err \" + JSON.stringify(error))\n      })\n  }\n\n  //\n  createDingTalkFinance(userData) {\n    const { applyTime,applicantName,visitorName,visitorMobile } = userData\n    let data = {\n      requestId: this.state.requestId,\n      codeIdentity: \"DT_VISITOR\",\n      status: \"OPEN\",\n      corpId: this.state.corpId, //  corpId\n      userCorpRelationType: \"INTERNAL_STAFF\",\n      userIdentity: this.state.userId, //  userId\n      gmtExpired: this.state.monthLater,\n      availableTimes: [\n        {\n          gmtStart: this.state.now,\n          gmtEnd: this.state.monthLater,\n        },\n      ],\n      extInfo: {\n        corpAddress: \"杭州未来组织park\",\n        applicantName: applicantName,\n        applyTime: applyTime,\n        visitorName: visitorName,\n        visitorMobile: visitorMobile,\n        visitorCorpInfo: \"钉钉网络\",\n        visitorExtInfo: \"访客ID：20210907001\",\n        remarks: \"欢迎光临\",\n        corpWebsite: \"www.dingtalk.com\",\n      },\n    }\n    axios\n      .post(this.state.domain + \"/createinstance\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"创建成功，请到手机钉钉--右上角+--钉工牌中查看\")\n          this.setState({\n            codeId: res.data.data,\n            showType: 0\n          })\n        }\n      })\n      .catch((error) => {\n        alert(\"createDingTalkFinance err \" + JSON.stringify(error))\n      })\n  }\n  // 更新个人钉工牌电子码\n  updateDingTalkFinance(userData) {\n    // if (!this.state.codeId) {\n    //   message.error(\"请先创建钉工牌电子码\")\n    // }\n    const { applyTime,applicantName,visitorName,visitorMobile } = userData\n    let data = {\n      codeId: this.state.codeId, //  code\n      codeIdentity: \"DT_VISITOR\",\n      status: \"OPEN\",\n      corpId: this.state.corpId, //  corpId\n      userCorpRelationType: \"INTERNAL_STAFF\",\n      userIdentity: this.state.userId, //  userId\n      gmtExpired: this.state.monthLater,\n      availableTimes: [\n        {\n          gmtStart: this.state.now,\n          gmtEnd: this.state.monthLater,\n        },\n      ],\n      extInfo: {\n        corpAddress: \"杭州未来组织park\",\n        applicantName: applicantName,\n        applyTime: applyTime,\n        visitorName: visitorName,\n        visitorMobile: visitorMobile,\n        visitorCorpInfo: \"海云钉网络\",\n        visitorExtInfo: \"访客ID：20210907001\",\n        remarks: \"欢迎光临\",\n        corpWebsite: \"www.dingtalk.com\",\n      },\n    }\n    axios\n      .post(this.state.domain + \"/updateinstance\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          this.setState({\n            showType: 0\n          })\n          message.success(\"更新成功，请到手机钉钉--右上角+--钉工牌中查看\")\n        }\n      })\n      .catch((error) => {\n        alert(\"updateDingTalkFinance err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌电子码解码\n  getDingTalkCode(payCode) {\n    const data = {\n      payCode: payCode, // code\n      requestId: this.state.requestId,\n    }\n    axios\n      .post(this.state.domain + \"/decode\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"钉工牌电子码解码成功！付款码：\" + res.data.data.body.alipayCode)\n        }\n      })\n      .catch((error) => {\n        alert(\"getDingTalkCode err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌电子码验证\n  authDingTalkCode() {\n    const data = {\n      corpId: this.state.corpId, //  corpId\n      payCode: this.state.payCode, //  code\n      userCorpRelationType: \"INTERNAL_STAFF\",\n      userIdentity: this.state.userId, //  userId\n      verifyLocation: \"未来park\",\n      verifyResult: true,\n      verifyTime: this.state.now,\n    }\n    axios\n      .post(this.state.domain + \"/verify\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"钉工牌验证同步成功\")\n        } else {\n          message.error(\"钉工牌验证同步失败\")\n        }\n      })\n      .catch((error) => {\n        alert(\"authDingTalkCode err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌同步支付结果\n  asyncDingTalkPayResult(payData) {\n    const { merchantName,title,amount,gmtTradeCreate,gmtTradeFinish } = payData\n    const data = {\n      amount: amount,\n      chargeAmount: \"0\",\n      corpId: this.state.corpId, //  corpId\n      gmtTradeCreate: gmtTradeFinish,\n      gmtTradeFinish: gmtTradeFinish,\n      merchantName: merchantName,\n      payChannelDetailList: [\n        {\n          amount: \"0.01\",\n          fundToolDetailList: [\n            {\n              amount: \"0.01\",\n              extInfo: \"\",\n              fundToolName: \"数字食堂余额\",\n              gmtCreate: this.state.now,\n              gmtFinish: this.state.now,\n              promotionFundTool: false,\n            },\n          ],\n          payChannelName: \"数字食堂余额\",\n          payChannelOrderNo: \"37164671863227445\",\n          payChannelType: \"BALANCE\",\n          promotionAmount: \"0.00\",\n        },\n      ],\n      payCode: this.state.payCode, //  code\n      promotionAmount: \"0\",\n      remark: \"钉钉支付码\",\n      title: title,\n      tradeNo: this.randomString(),\n      tradeStatus: \"SUCCESS\",\n      userId: this.state.userId, //  userId\n    }\n    axios\n      .post(this.state.domain + \"/notify\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"支付结果同步成功\")\n          this.setState({\n            showType: 0\n          })\n        }\n      })\n      .catch((error) => {\n        alert(\"asyncDingTalkPayResult err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌同步退款结果\n  asyncDingTalkReturnResult(returnData) {\n    const { refundAmount,gmtRefund} = returnData\n    const data = {\n      corpId: this.state.corpId, //  corpId\n      userId: this.state.userId, //  userId\n      tradeNo: this.randomString(),\n      refundOrderNo: this.randomString(),\n      remark: \"钉钉退款\",\n      refundAmount: refundAmount,\n      refundPromotionAmount: \"0.00\",\n      gmtRefund: gmtRefund,\n      payCode: this.state.payCode, //  code\n      payChannelDetailList: [\n        {\n          amount: \"0.01\",\n          fundToolDetailList: [\n            {\n              amount: \"0.01\",\n              extInfo: \"\",\n              fundToolName: \"数字食堂余额\",\n              gmtCreate: this.state.now,\n              gmtFinish: this.state.now,\n              promotionFundTool: false,\n            },\n          ],\n          payChannelName: \"数字食堂余额\",\n          payChannelOrderNo: \"37164671863227444\",\n          payChannelRefundOrderNo: \"37164671863227446\",\n          payChannelType: \"BALANCE\",\n          promotionAmount: \"0.00\",\n        },\n      ],\n    }\n    axios\n      .post(this.state.domain + \"/refund\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"退款结果同步成功\")\n          this.setState({\n            showType: 0\n          })\n        }\n      })\n      .catch((error) => {\n        alert(\"asyncDingTalkReturnResult err \" + JSON.stringify(error))\n      })\n  }\n\n  randomString(len) {\n    len = len || 32;\n    let chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\n    let maxPos = chars.length;\n    let pwd = '';\n    for (let i = 0; i < len; i++) {\n      pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n    }\n    return pwd;\n  }\n\n  login() {\n    axios\n      .get(this.state.domain + \"/getCorpId\")\n      .then((res) => {\n        if (res.data) {\n          this.loginAction(res.data)\n        }\n      })\n      .catch((error) => {\n        alert(\"corpId err, \" + JSON.stringify(error))\n      })\n  }\n  loginAction(corpId) {\n    let _this = this\n    dd.runtime.permission.requestAuthCode({\n      corpId: corpId, //企业 corpId\n      onSuccess: function (res) {\n        // 调用成功时回调\n        _this.state.authCode = res.code\n        axios\n          .get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode)\n          .then((res) => {\n            if (res && res.data.success) {\n              let userId = res.data.data.userId\n              let userName = res.data.data.userName\n              message.success(\"登录成功，你好:\" + userName)\n                _this.setState({\n                  userId: userId,\n                  userName: userName,\n                  corpId: corpId,\n                })\n            } else {\n              alert(\"login failed --->\" + JSON.stringify(res))\n            }\n          })\n          .catch((error) => {\n            alert(\"httpRequest failed --->\" + JSON.stringify(error))\n          })\n      },\n      onFail: function (err) {\n        // 调用失败时回调\n        alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n      },\n    })\n  }\n}\n\nexport default withRouter(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Route path={`/`} component={App}></Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}