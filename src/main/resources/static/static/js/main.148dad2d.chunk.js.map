{"version":3,"sources":["components/Work.js","components/Create.js","components/Pay.js","components/Return.js","App.js","reportWebVitals.js","index.js"],"names":["Work","props","Form","useForm","form","className","onFinish","data","onClick","Item","label","name","placeholder","htmlType","type","Create","useState","pickerV","setPickerV","time","settime","now","Date","title","rules","required","message","visible","onClose","min","precision","onConfirm","val","s","setFieldsValue","applyTime","value","moment","format","Pay","gmtTradeCreate","gmtTradeFinish","Return","gmtRefund","App","state","domain","corpId","userId","userName","payCode","showType","codeId","this","login","saveDingTalkFinance","setState","authDingTalkCode","e","asyncDingTalkReturnResult","asyncDingTalkPayResult","createDingTalkFinance","updateDingTalkFinance","getDingTalkCode","codeIdentity","status","extInfo","xx_key","axios","post","JSON","stringify","headers","then","res","success","catch","error","alert","userData","applicantName","visitorName","visitorMobile","requestId","userCorpRelationType","userIdentity","gmtExpired","availableTimes","gmtStart","gmtEnd","corpAddress","visitorCorpInfo","visitorExtInfo","remarks","corpWebsite","body","alipayCode","verifyLocation","verifyResult","verifyTime","payData","merchantName","amount","chargeAmount","payChannelDetailList","fundToolDetailList","fundToolName","gmtCreate","gmtFinish","promotionFundTool","payChannelName","payChannelOrderNo","payChannelType","promotionAmount","remark","tradeNo","tradeStatus","returnData","refundAmount","refundOrderNo","refundPromotionAmount","payChannelRefundOrderNo","get","loginAction","_this","dd","permission","requestAuthCode","onSuccess","authCode","code","onFail","err","React","Component","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.148dad2d.chunk.js","sourcesContent":["import react, { useEffect } from \"react\"\nimport { Form, Input, Button } from \"antd\"\n\nconst Work = (props) => {\n  const [form] = Form.useForm()\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n\n  return (\n    <div>\n      <h4 className=\"title\">钉工牌</h4>\n      <Form form={form} onFinish={onSubmit}>\n        <Form.Item label=\"支付电子码\" name=\"payCode\">\n          <Input placeholder=\"请输入钉工牌电子码，该码值请扫描钉工牌电子码获取\" />\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Work\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst Create = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [time, settime] = useState(null)\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n  const now = new Date()\n  return (\n    <div>\n      <h4 className=\"title\">钉工牌——{props.title}</h4>\n      <Form form={form} onFinish={onSubmit}>\n        <Form.Item label=\"申请人名称\" name=\"applicantName\">\n          <Input placeholder=\"请输入申请人名称\" />\n        </Form.Item>\n        <Form.Item\n            label=\"申请时间\"\n            name=\"applyTime\"\n            rules={[{ required: true, message: \"申请时间必选\" }]}\n        >\n          <div className=\"table\">\n            <Button type=\"primary\" onClick={() => setPickerV(true)}>\n              {time ? \"已选择申请时间\" : \"选择申请时间\"}\n            </Button>\n          </div>\n\n          <DatePicker\n              visible={pickerV}\n              onClose={() => {\n                setPickerV(false)\n              }}\n              min={new Date()}\n              precision=\"second\"\n              onConfirm={(val, s) => {\n                settime(val)\n                form.setFieldsValue({\n                  applyTime: val,\n                })\n              }}\n          >\n            {(value) => {\n              return value\n                  ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                  : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n            }}\n          </DatePicker>\n        </Form.Item>\n        <Form.Item label=\"访客名称\" name=\"visitorName\">\n          <Input placeholder=\"请输入访客名称\" />\n        </Form.Item>\n        <Form.Item label=\"访客手机号\" name=\"visitorMobile\">\n          <Input placeholder=\"请输入访客手机号\" />\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Create\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst Pay = (props) => {\n    const [form] = Form.useForm()\n    const [pickerV, setPickerV] = useState(false)\n    const [time, settime] = useState(null)\n\n    const onSubmit = (data) => {\n        props.onClick(data)\n    }\n    const now = new Date()\n    return (\n        <div>\n            <h4 className=\"title\">钉工牌——{props.title}</h4>\n            <Form form={form} onFinish={onSubmit}>\n                <Form.Item label=\"商户名称\" name=\"merchantName\">\n                    <Input placeholder=\"请输入商户名称\" />\n                </Form.Item>\n                <Form.Item label=\"订单标题\" name=\"title\">\n                    <Input placeholder=\"请输入订单标题\" />\n                </Form.Item>\n                <Form.Item label=\"订单金额\" name=\"amount\">\n                    <Input placeholder=\"请输入订单金额\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"交易开始时间\"\n                    name=\"gmtTradeCreate\"\n                    // rules={[{ required: true, message: \"交易开始时间必选\" }]}\n                >\n                    <div className=\"table\">\n                        <Button type=\"primary\" onClick={() => setPickerV(true)}>\n                            {time ? \"已选择交易开始时间\" : \"选择交易开始时间\"}\n                        </Button>\n                    </div>\n\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                gmtTradeCreate: val,\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n                <Form.Item\n                    label=\"交易结束时间\"\n                    name=\"gmtTradeFinish\"\n                    rules={[{ required: true, message: \"交易结束时间必选\" }]}\n                >\n                    <div className=\"table\">\n                        <Button type=\"primary\" onClick={() => setPickerV(true)}>\n                            {time ? \"已选择交易结束时间\" : \"选择交易结束时间\"}\n                        </Button>\n                    </div>\n\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                gmtTradeFinish: val,\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n\n\n                <Button htmlType=\"submit\" type=\"primary\">\n                    提交\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Pay\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\n\nconst Return = (props) => {\n    const [form] = Form.useForm()\n    const [pickerV, setPickerV] = useState(false)\n    const [time, settime] = useState(null)\n\n    const onSubmit = (data) => {\n        props.onClick(data)\n    }\n    const now = new Date()\n    return (\n        <div>\n            <h4 className=\"title\">钉工牌——{props.title}</h4>\n            <Form form={form} onFinish={onSubmit}>\n                <Form.Item label=\"退款金额\" name=\"refundAmount\">\n                    <Input placeholder=\"请输入退款金额\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"退款时间\"\n                    name=\"gmtRefund\"\n                    rules={[{ required: true, message: \"退款时间必选\" }]}\n                >\n                    <div className=\"table\">\n                        <Button type=\"primary\" onClick={() => setPickerV(true)}>\n                            {time ? \"已选择退款时间\" : \"选择退款时间\"}\n                        </Button>\n                    </div>\n\n                    <DatePicker\n                        visible={pickerV}\n                        onClose={() => {\n                            setPickerV(false)\n                        }}\n                        min={new Date()}\n                        precision=\"second\"\n                        onConfirm={(val, s) => {\n                            settime(val)\n                            form.setFieldsValue({\n                                gmtRefund: val,\n                            })\n                        }}\n                    >\n                        {(value) => {\n                            return value\n                                ? moment(value).format(\"YYYY-MM-DD HH:mm:ss\")\n                                : moment(now).format(\"YYYY-MM-DD HH:mm:ss\")\n                        }}\n                    </DatePicker>\n                </Form.Item>\n\n                <Button htmlType=\"submit\" type=\"primary\">\n                    提交\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Return\n","import * as dd from \"dingtalk-jsapi\"\nimport axios from \"axios\"\nimport React from \"react\"\nimport \"./App.css\"\nimport { message, Button } from \"antd\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport Work from \"./components/Work\"\nimport Create from \"./components/Create\"\nimport Pay from \"./components/Pay\"\nimport Return from \"./components/Return\"\nimport \"antd/dist/antd.min.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      //内网穿透工具介绍:\n      // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n      // 替换成后端服务域名\n      domain: \"\",\n      corpId: \"\",\n      userId: \"\",\n      userName: \"\",\n      payCode: \"\",\n      showType: 0,\n      codeId: \"\"\n    }\n  }\n\n  render() {\n    if (this.state.userId === \"\") {\n      this.login()\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showType === 0 && (\n          <div>\n            <p>\n              <Button type=\"primary\" onClick={() => this.saveDingTalkFinance()}>\n              企业配置钉工牌\n            </Button>\n            </p>\n            <p><Button type=\"primary\" onClick={() => this.setState({ showType: 2 })}>\n              创建个人钉工牌电子码\n            </Button></p>\n            <p><Button type=\"primary\" onClick={() => this.setState({ showType: 3 })}>\n              更新个人钉工牌电子码\n            </Button></p>\n            <p><Button\n              type=\"primary\"\n              onClick={() => this.setState({ showType: 1 })}\n            >\n              钉工牌电子码解码\n            </Button></p>\n            <p><Button type=\"primary\" onClick={() => this.authDingTalkCode()}>\n              钉工牌同步电子码验证结果\n            </Button></p>\n            <p><Button\n              type=\"primary\"\n              onClick={() => this.setState({ showType: 4 })}\n            >\n              钉工牌同步支付结果\n            </Button></p>\n            <p><Button\n              type=\"primary\"\n              onClick={() => this.setState({ showType: 5 })}\n            >\n              钉工牌同步退款结果\n            </Button></p>\n            \n          </div>\n        )}\n        {/* 同步退款结果 */}\n        {this.state.showType === 5 && (\n            <Return\n                title={\"同步退款\"}\n                onClick={(e) => this.asyncDingTalkReturnResult(e)}\n            />\n        )}\n        {/* 同步支付结果 */}\n        {this.state.showType === 4 && (\n            <Pay\n                title={\"同步支付\"}\n                onClick={(e) => this.asyncDingTalkPayResult(e)}\n            />\n        )}\n        {/* 创建电子码 */}\n        {this.state.showType === 2 && (\n            <Create\n                title={\"创建电子码\"}\n                onClick={(e) => this.createDingTalkFinance(e)}\n            />\n        )}\n        {/* 更新电子码 */}\n        {this.state.showType === 3 && (\n            <Create\n                title={\"更新电子码\"}\n                onClick={(e) => this.updateDingTalkFinance(e)}\n            />\n        )}\n        {/* 电子码解码 */}\n        {this.state.showType === 1 && (\n          <Work\n            onClick={(data) => {\n              this.setState({\n                payCode: data.payCode,\n                showType: 0,\n              })\n              this.getDingTalkCode(data.payCode)\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n  // 企业配置钉工牌\n  saveDingTalkFinance() {\n    let data = {\n      codeIdentity: \"DT_VISITOR\",\n      status: \"OPEN\",\n      corpId: this.state.corpId,\n      extInfo: {\n        xx_key: \"xx_value\",\n      },\n    }\n    axios\n      .post(this.state.domain + \"/save\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"企业配置钉工牌成功\")\n        }\n      })\n      .catch((error) => {\n        alert(\"saveDingTalkFinance err \" + JSON.stringify(error))\n      })\n  }\n\n  //\n  createDingTalkFinance(userData) {\n    const { applyTime,applicantName,visitorName,visitorMobile } = userData\n    let data = {\n      requestId: \"elkwfjkwelfj\",\n      codeIdentity: \"DT_VISITOR\",\n      status: \"OPEN\",\n      corpId: this.state.corpId, //  corpId\n      userCorpRelationType: \"INTERNAL_STAFF\",\n      userIdentity: this.state.userId, //  userId\n      gmtExpired: \"2021-11-28 00:00:00\",\n      availableTimes: [\n        {\n          gmtStart: \"2021-10-28 15:00:00\",\n          gmtEnd: \"2021-11-28 00:00:00\",\n        },\n      ],\n      extInfo: {\n        corpAddress: \"杭州未来组织park\",\n        applicantName: applicantName,\n        applyTime: applyTime,\n        visitorName: visitorName,\n        visitorMobile: visitorMobile,\n        visitorCorpInfo: \"钉钉网络\",\n        visitorExtInfo: \"访客ID：20210907001\",\n        remarks: \"欢迎光临\",\n        corpWebsite: \"www.dingtalk.com\",\n      },\n    }\n    axios\n      .post(this.state.domain + \"/createinstance\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"创建成功，请到手机钉钉--右上角+--钉工牌中查看\")\n          this.setState({\n            codeId: res.data.data,\n            showType: 0\n          })\n        }\n      })\n      .catch((error) => {\n        alert(\"createDingTalkFinance err \" + JSON.stringify(error))\n      })\n  }\n  // 更新个人钉工牌电子码\n  updateDingTalkFinance(userData) {\n    // if (!this.state.codeId) {\n    //   message.error(\"请先创建钉工牌电子码\")\n    // }\n    const { applyTime,applicantName,visitorName,visitorMobile } = userData\n    let data = {\n      codeId: this.state.codeId, //  code\n      codeIdentity: \"DT_VISITOR\",\n      status: \"OPEN\",\n      corpId: this.state.corpId, //  corpId\n      userCorpRelationType: \"INTERNAL_STAFF\",\n      userIdentity: this.state.userId, //  userId\n      gmtExpired: \"2021-11-28 00:00:00\",\n      availableTimes: [\n        {\n          gmtStart: \"2021-10-28 15:00:00\",\n          gmtEnd: \"2021-11-28 00:00:00\",\n        },\n      ],\n      extInfo: {\n        corpAddress: \"杭州未来组织park\",\n        applicantName: applicantName,\n        applyTime: applyTime,\n        visitorName: visitorName,\n        visitorMobile: visitorMobile,\n        visitorCorpInfo: \"海云钉网络\",\n        visitorExtInfo: \"访客ID：20210907001\",\n        remarks: \"欢迎光临\",\n        corpWebsite: \"www.dingtalk.com\",\n      },\n    }\n    axios\n      .post(this.state.domain + \"/updateinstance\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          this.setState({\n            showType: 0\n          })\n          message.success(\"更新成功，请到手机钉钉--右上角+--钉工牌中查看\")\n        }\n      })\n      .catch((error) => {\n        alert(\"updateDingTalkFinance err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌电子码解码\n  getDingTalkCode(payCode) {\n    const data = {\n      payCode: payCode, // code\n      requestId: \"250134742608720142-V0ami1d7o7vap4uwlx\", // 随机生成即可\n    }\n    axios\n      .post(this.state.domain + \"/decode\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"钉工牌电子码解码成功！付款码：\" + res.data.data.body.alipayCode)\n        }\n      })\n      .catch((error) => {\n        alert(\"getDingTalkCode err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌电子码验证\n  authDingTalkCode() {\n    const data = {\n      corpId: this.state.corpId, //  corpId\n      payCode: this.state.payCode, //  code\n      userCorpRelationType: \"INTERNAL_STAFF\",\n      userIdentity: this.state.userId, //  userId\n      verifyLocation: \"未来park\",\n      verifyResult: true,\n      verifyTime: \"2021-10-28 10:30:06\",\n    }\n    axios\n      .post(this.state.domain + \"/verify\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"钉工牌验证同步成功\")\n        } else {\n          message.error(\"钉工牌验证同步失败\")\n        }\n      })\n      .catch((error) => {\n        alert(\"authDingTalkCode err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌同步支付结果\n  asyncDingTalkPayResult(payData) {\n    const { merchantName,title,amount,gmtTradeCreate,gmtTradeFinish } = payData\n    const data = {\n      amount: amount,\n      chargeAmount: \"0\",\n      corpId: this.state.corpId, //  corpId\n      gmtTradeCreate: gmtTradeFinish,\n      gmtTradeFinish: gmtTradeFinish,\n      merchantName: merchantName,\n      payChannelDetailList: [\n        {\n          amount: \"0.01\",\n          fundToolDetailList: [\n            {\n              amount: \"0.01\",\n              extInfo: \"\",\n              fundToolName: \"数字食堂余额\",\n              gmtCreate: \"2021-10-28 12:11:24\",\n              gmtFinish: \"2021-10-28 12:11:24\",\n              promotionFundTool: false,\n            },\n          ],\n          payChannelName: \"数字食堂余额\",\n          payChannelOrderNo: \"37164671863227333\",\n          payChannelType: \"BALANCE\",\n          promotionAmount: \"0.00\",\n        },\n      ],\n      payCode: this.state.payCode, //  code\n      promotionAmount: \"0\",\n      remark: \"钉钉支付码\",\n      title: title,\n      tradeNo: \"2021102612112383609613ecf6b2e222\",\n      tradeStatus: \"SUCCESS\",\n      userId: this.state.userId, //  userId\n    }\n    axios\n      .post(this.state.domain + \"/notify\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"支付结果同步成功\")\n          this.setState({\n            showType: 0\n          })\n        }\n      })\n      .catch((error) => {\n        alert(\"asyncDingTalkPayResult err \" + JSON.stringify(error))\n      })\n  }\n  // 钉工牌同步退款结果\n  asyncDingTalkReturnResult(returnData) {\n    const { refundAmount,gmtRefund} = returnData\n    const data = {\n      corpId: this.state.corpId, //  corpId\n      userId: this.state.userId, //  userId\n      tradeNo: \"2021102612112383609613ecf6b2e222\",\n      refundOrderNo: \"2021102612112383609613ecf6b2e222\",\n      remark: \"钉钉退款\",\n      refundAmount: refundAmount,\n      refundPromotionAmount: \"0.00\",\n      gmtRefund: gmtRefund,\n      payCode: this.state.payCode, //  code\n      payChannelDetailList: [\n        {\n          amount: \"0.01\",\n          fundToolDetailList: [\n            {\n              amount: \"0.01\",\n              extInfo: \"\",\n              fundToolName: \"数字食堂余额\",\n              gmtCreate: \"2021-10-28 12:11:24\",\n              gmtFinish: \"2021-10-28 12:11:24\",\n              promotionFundTool: false,\n            },\n          ],\n          payChannelName: \"数字食堂余额\",\n          payChannelOrderNo: \"37164671863227333\",\n          payChannelRefundOrderNo: \"37164671863227333\",\n          payChannelType: \"BALANCE\",\n          promotionAmount: \"0.00\",\n        },\n      ],\n    }\n    axios\n      .post(this.state.domain + \"/refund\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"退款结果同步成功\")\n          this.setState({\n            showType: 0\n          })\n        }\n      })\n      .catch((error) => {\n        alert(\"asyncDingTalkReturnResult err \" + JSON.stringify(error))\n      })\n  }\n\n  login() {\n    axios\n      .get(this.state.domain + \"/getCorpId\")\n      .then((res) => {\n        if (res.data) {\n          this.loginAction(res.data)\n        }\n      })\n      .catch((error) => {\n        alert(\"corpId err, \" + JSON.stringify(error))\n      })\n  }\n  loginAction(corpId) {\n    let _this = this\n    dd.runtime.permission.requestAuthCode({\n      corpId: corpId, //企业 corpId\n      onSuccess: function (res) {\n        // 调用成功时回调\n        _this.state.authCode = res.code\n        axios\n          .get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode)\n          .then((res) => {\n            if (res && res.data.success) {\n              let userId = res.data.data.userId\n              let userName = res.data.data.userName\n              message.success(\"登录成功，你好:\" + userName)\n                _this.setState({\n                  userId: userId,\n                  userName: userName,\n                  corpId: corpId,\n                })\n            } else {\n              alert(\"login failed --->\" + JSON.stringify(res))\n            }\n          })\n          .catch((error) => {\n            alert(\"httpRequest failed --->\" + JSON.stringify(error))\n          })\n      },\n      onFail: function (err) {\n        // 调用失败时回调\n        alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n      },\n    })\n  }\n}\n\nexport default withRouter(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Route path={`/`} component={App}></Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}